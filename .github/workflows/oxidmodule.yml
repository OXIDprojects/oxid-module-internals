name: oxid module tests

on: [push]

jobs:
  syntax:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1   
    - name: Validate composer.json
      run: composer validate   
    - name: validate php syntax
      run: find . -not -path "./vendor/*" -name "*.php" -print0 | xargs -0 -n1 -P8 php -l     
  check:
    runs-on: ubuntu-latest
    env:
      MODULE_NAME: moduleinternals
      DB_HOST: "localhost;unix_socket=/var/run/mysqld/mysqld.sock"
    container:
      image: oxidprojects/oxid-test:v2_6.1_php7.1
      options: -v /var/run/mysqld/mysqld.sock:/var/run/mysqld/mysqld.sock
    steps:
    - uses: actions/checkout@v1
    - name: phpcs
      run: php /var/www/oxid/phpcs.phar --standard=PSR12 --extensions=php --ignore=vendor . 
    - name: setup oxid
      run: bash /var/www/oxid/setup.sh
    - name: phpstan
      continue-on-error: true
      run: |
        MD=$(pwd)
        cd /var/www/oxid/
        vendor/bin/phpstan analys --configuration phpstan.neon $MD
  test:
    strategy:
      matrix:
        tag: [v2_6.1_php7.1, v2_6.2-rc_php7.1, v2_dev-master_php7.2]         
    runs-on: ubuntu-latest
    container:
      image: oxidprojects/oxid-test:${{matrix.tag}}
      options: -v /var/run/mysqld/mysqld.sock:/var/run/mysqld/mysqld.sock
    env:
      MODULE_NAME: moduleinternals
      DB_HOST: "localhost;unix_socket=/var/run/mysqld/mysqld.sock"
    steps:
    - uses: actions/checkout@v1
    - name: setup oxid
      run: bash /var/www/oxid/setup.sh 
    - name: run tests
      run: |
        cd /var/www/oxid/
        vendor/bin/runtests
        ls -al source/log

  
